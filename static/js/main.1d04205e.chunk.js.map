{"version":3,"sources":["components/utils/logo/Logo.js","components/utils/themebutton/ThemeButton.js","context/modal/ModalReducer.js","context/modal/ModalState.js","components/layout/Navbar.js","components/modal/types/QuickInsert.js","components/modal/Modal.js","context/alert/AlertReducer.js","context/alert/AlertState.js","components/layout/Alert.js","components/notes/Tag.js","components/notes/Note.js","components/pages/home/Home.js","components/pages/statistics/Statistics.js","components/pages/rules/Rules.js","components/pages/currenttasks/CurrentTasks.js","App.js","context/AppReducer.js","context/GlobalState.js","serviceWorker.js","index.js"],"names":["Logo","className","ThemeButton","state","action","type","modalStatus","payload","status","modalType","initialState","ModalContext","createContext","ModalProvider","children","useReducer","ModalReducer","dispatch","Provider","value","setModal","Navbar","useContext","onClick","QuickInsert","Modal","useState","modalClass","setModalClass","useEffect","setTimeout","closeModal","e","target","classList","contains","alertStatus","alertMsg","msg","alertType","alertTime","time","AlertContext","AlertProvider","AlertReducer","setAlert","theType","theMsg","Alert","alertClass","setAlertClass","Tag","tag","background","color","style","name","Note","note","tags","console","log","borderColor","first","other","map","key","id","Home","shortid","generate","text","date","Statics","Rules","CurrentTasks","App","exact","path","process","component","Statistics","test","GlobalContext","GlobalProvider","AppReducer","testFunc","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1d04205e.chunk.js","sourcesContent":["import React from 'react'\r\nimport './logo.scss';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='logo'>\r\n      <div className='col col-1'>\r\n        <div className='row row-1'></div>\r\n        <div className='row row-2'></div>\r\n        <div className='row row-3'></div>\r\n      </div>\r\n      <div className='col col-2'>\r\n        <div className='row row-1'></div>\r\n        <div className='row row-2'></div>\r\n        <div className='row row-3'></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport './themebutton.scss';\r\n\r\nconst ThemeButton = () => {\r\n  return (\r\n    <div>\r\n      from theme changer\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ThemeButton\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'set-modal':\r\n      return {\r\n        ...state,\r\n        modalStatus: action.payload.status,\r\n        modalType: action.payload.type\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { createContext, useReducer } from 'react';\r\nimport ModalReducer from './ModalReducer';\r\n\r\nconst initialState = {\r\n  modalStatus: 'first-off',\r\n  modalType: 'none',\r\n};\r\n\r\nexport const ModalContext = createContext(initialState);\r\n\r\nexport const ModalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(ModalReducer, initialState);\r\n\r\n  const setModal = (status, type) => {\r\n    if(status === 'off') {\r\n      dispatch({\r\n        type: 'set-modal',\r\n        payload: {\r\n          status,\r\n          type: state.modalType\r\n        }\r\n      })\r\n    } else if(status === 'on') {\r\n      dispatch({\r\n        type: 'set-modal',\r\n        payload: {\r\n          status,\r\n          type\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        modalStatus: state.modalStatus,\r\n        modalType: state.modalType,\r\n        setModal,\r\n      }}\r\n    >\r\n      { children }\r\n    </ModalContext.Provider>\r\n  );\r\n};","import React, { useContext } from 'react'\r\n\r\nimport Logo from './../utils/logo/Logo';\r\nimport ThemeButton from '../utils/themebutton/ThemeButton';\r\nimport { ModalContext } from '../../context/modal/ModalState';\r\n\r\nimport './style/navbar.scss';\r\n\r\nconst Navbar = () => {\r\n  const { setModal } = useContext(ModalContext)\r\n  \r\n  const onInsert = () => {\r\n    setModal('on', 'quick-insert')\r\n  }\r\n  \r\n  return (\r\n    <div className='navbar'>\r\n      <div className='navbar-left'>\r\n        <div>\r\n          right\r\n        </div>\r\n        <div>\r\n          search\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Logo />\r\n      </div>\r\n      <div className='navbar-right'>\r\n        <ThemeButton />\r\n        <button className='insert-button' onClick={onInsert}>\r\n          insert\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst QuickInsert = () => {\r\n  return (\r\n    <div>\r\n      from quick insert\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuickInsert\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { ModalContext } from '../../context/modal/ModalState';\r\n\r\nimport QuickInsert from './types/QuickInsert';\r\n\r\nimport './style/modal.scss';\r\n\r\nconst Modal = () => {\r\n  const { modalStatus, modalType, setModal } = useContext(ModalContext)\r\n  \r\n  const [modalClass, setModalClass] = useState('off')\r\n  \r\n  useEffect(() => {\r\n    if(modalStatus === 'off') {\r\n      setModalClass('go')\r\n\r\n      setTimeout(() => {\r\n        setModalClass('off')\r\n      }, 480);\r\n    } else if(modalStatus === 'on') {\r\n      setModalClass('come')\r\n\r\n      setTimeout(() => {\r\n        setModalClass('on')\r\n      }, 480);\r\n    } else if(modalStatus === 'first-off') {\r\n      setModalClass('off')\r\n    }\r\n  }, [modalStatus])\r\n\r\n  const onClick = e => {\r\n    if(e.target.classList.contains('modal-container')) {\r\n      closeModal()\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal('off')\r\n  }\r\n  \r\n  return (\r\n    <div className={`modal-container ${modalClass}`} onClick={onClick}>\r\n      <div className='modal-body'>\r\n        <div className='close-modal-btn' onClick={closeModal}></div>\r\n        moda content\r\n        { modalType === 'quick-insert' && <QuickInsert /> }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'set-alert':\r\n      return {\r\n        ...state,\r\n        alertStatus: action.payload.status,\r\n        alertMsg: action.payload.msg,\r\n        alertType: action.payload.type,\r\n        alertTime: action.payload.time,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { createContext, useReducer } from 'react';\r\nimport AlertReducer from './AlertReducer';\r\n\r\nconst initialState = {\r\n  alertStatus: 'first-off',\r\n  alertMsg: 'alert text',\r\n  alertType: 'success',\r\n  alertTime: 1000\r\n};\r\n\r\nexport const AlertContext = createContext(initialState);\r\n\r\nexport const AlertProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n  const setAlert = (status, msg, type, time) => {\r\n    const theType = status === 'on' ? type : state.alertType\r\n    const theMsg = status === 'on' ? msg : state.alertMsg\r\n    \r\n    dispatch({\r\n      type: 'set-alert',\r\n      payload: {\r\n        status,\r\n        msg: theMsg,\r\n        type: theType,\r\n        time\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alertStatus: state.alertStatus,\r\n        alertMsg: state.alertMsg,\r\n        alertType: state.alertType,\r\n        setAlert,\r\n      }}\r\n    >\r\n      { children }\r\n    </AlertContext.Provider>\r\n  );\r\n};","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { AlertContext } from '../../context/alert/AlertState';\r\n\r\nimport './style/alert.scss';\r\n\r\nconst Alert = () => {\r\n  const { alertStatus, alertMsg, alertType, setAlert} = useContext(AlertContext)\r\n\r\n  const [alertClass, setAlertClass] = useState('off')\r\n  \r\n  useEffect(() => {\r\n    if(alertStatus === 'off') {\r\n      setAlertClass('go')\r\n\r\n      setTimeout(() => {\r\n        setAlertClass('off')\r\n      }, 480);\r\n    } else if(alertStatus === 'on') {\r\n      setAlertClass('come')\r\n\r\n      setTimeout(() => {\r\n        setAlertClass('on')\r\n      }, 480);\r\n    } else if(alertStatus === 'first-off') {\r\n      setAlertClass('off')\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [alertStatus])\r\n\r\n  const onClick = () => {\r\n    setAlert('off')\r\n  }\r\n  \r\n  return (\r\n    <div className={`alert ${alertClass} alert-${alertType}`} onClick={onClick}>\r\n      { alertMsg }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n\r\nconst Tag = ({tag}) => {\r\n  const getTagColor = () => {\r\n    return tag.color\r\n  }\r\n\r\n  const background = {\r\n    background: getTagColor()\r\n  }\r\n  \r\n  return (\r\n    <div className='tag' style={background}>\r\n      #{tag.name}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tag\r\n","import React from 'react'\r\nimport Tag from './Tag';\r\n\r\nimport './style/note.scss';\r\n\r\nconst Note = ({ note }) => {\r\n  const { tags } = note\r\n  \r\n  console.log(note)\r\n  \r\n  const borderColor = {\r\n    borderColor: note.tags.first.color\r\n  }\r\n  \r\n  return (\r\n    <div className='note' style={borderColor}>\r\n      from note\r\n      <div className='note-footer'>\r\n        <Tag tag={tags.first} />\r\n        {\r\n          tags.other.map(tag => (\r\n            <Tag key={tag.id} tag={tag} />\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport shortid from 'shortid';\r\nimport Note from '../../notes/Note';\r\n\r\nconst Home = () => {\r\n  const note = {\r\n    id: shortid.generate(),\r\n    tags: {\r\n      first: {\r\n        id: shortid.generate(),\r\n        name: 'fun',\r\n        color: '#eeb82c'\r\n      },\r\n      other: [\r\n        {\r\n          id: shortid.generate(),\r\n          name: 'techy',\r\n          color: '#04bca4'\r\n        },\r\n      ]\r\n    },\r\n    text: 'text',\r\n    date: 'date'\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      form Home js\r\n      <br/>\r\n      <Note note={note} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst Statics = () => {\r\n  return (\r\n    <div>\r\n      from stats\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statics\r\n","import React from 'react'\r\n\r\nconst Rules = () => {\r\n  return (\r\n    <div>\r\n      from rules\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rules\r\n","import React from 'react'\r\n\r\nconst CurrentTasks = () => {\r\n  return (\r\n    <div>\r\n      from current tasks\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CurrentTasks\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Modal from './components/modal/Modal';\nimport Alert from './components/layout/Alert';\nimport Home from './components/pages/home/Home';\nimport Statistics from './components/pages/statistics/Statistics';\nimport Rules from './components/pages/rules/Rules';\nimport CurrentTasks from './components/pages/currenttasks/CurrentTasks';\n\nconst App = () => {\n  return (\n    <Router>\n      <>\n        <Modal />\n        <Alert />\n        <Navbar />\n        <div className='container'>\n          from app.js\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={Home} />\n            <Route exact path='/hashnote' component={Home} />\n            <Route exact path='/statics' component={Statistics} />\n            <Route exact path='/rules' component={Rules} />\n            <Route exact path='/current-tasks' component={CurrentTasks} />\n          </Switch>\n        </div>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'test':\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\nconst initialState = {\r\n  test: 'test text',\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  const testFunc = () => {\r\n    dispatch({\r\n      type: 'test',\r\n      payload: 'test-text-2'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        test: state.test,\r\n        testFunc,\r\n      }}\r\n    >\r\n      { children }\r\n    </GlobalContext.Provider>\r\n  );\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { GlobalProvider } from './context/GlobalState';\nimport { AlertProvider } from './context/alert/AlertState'; \nimport { ModalProvider } from './context/modal/ModalState';\nimport * as serviceWorker from './serviceWorker';\n\nconst StateContainer = () => {\n  return (\n    <GlobalProvider>\n      <ModalProvider>\n        <AlertProvider>\n          <App />\n        </AlertProvider>\n      </ModalProvider>\n    </GlobalProvider>\n  )\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}