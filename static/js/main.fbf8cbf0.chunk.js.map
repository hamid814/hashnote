{"version":3,"sources":["context/alert/AlertReducer.js","context/alert/AlertState.js","components/utils/logo/Logo.js","components/utils/themebutton/ThemeButton.js","context/modal/ModalReducer.js","context/modal/ModalState.js","components/layout/Navbar.js","components/modal/types/QuickInsert.js","components/modal/Modal.js","components/layout/Alert.js","components/notes/Tag.js","components/notes/Note.js","components/notes/Notes.js","components/pages/home/Home.js","components/pages/tag/TagPage.js","components/pages/tags/Tags.js","components/pages/note/NotePage.js","components/pages/statistics/Statistics.js","components/pages/rules/Rules.js","components/pages/currenttasks/CurrentTasks.js","App.js","context/AppReducer.js","context/GlobalState.js","serviceWorker.js","index.js"],"names":["state","action","type","alertStatus","payload","status","alertMsg","msg","alertType","alertTime","time","initialState","AlertContext","createContext","AlertProvider","children","useReducer","AlertReducer","dispatch","Provider","value","setAlert","theType","theMsg","Logo","useContext","className","onClick","ThemeButton","modalStatus","modalType","ModalContext","ModalProvider","ModalReducer","setModal","Navbar","QuickInsert","Modal","useState","modalClass","setModalClass","useEffect","setTimeout","closeModal","e","target","classList","contains","Alert","alertClass","setAlertClass","Tag","tag","theTag","setTheTag","axios","get","id","then","res","data","err","console","log","background","color","to","process","style","name","Note","note","tags","primaryTag","setPrimaryTag","first","error","borderColor","text","other","map","key","Notes","notes","Home","setNotes","TagPage","match","params","setTag","tagColor","length","Tags","Statics","Rules","CurrentTasks","App","exact","path","component","NotePage","Statistics","test","GlobalContext","GlobalProvider","AppReducer","testFunc","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fbf8cbf0.chunk.js","sourcesContent":["export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'set-alert':\r\n      return {\r\n        ...state,\r\n        alertStatus: action.payload.status,\r\n        alertMsg: action.payload.msg,\r\n        alertType: action.payload.type,\r\n        alertTime: action.payload.time,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { createContext, useReducer } from 'react';\r\nimport AlertReducer from './AlertReducer';\r\n\r\nconst initialState = {\r\n  alertStatus: 'first-off',\r\n  alertMsg: 'alert text',\r\n  alertType: 'success',\r\n  alertTime: 1000\r\n};\r\n\r\nexport const AlertContext = createContext(initialState);\r\n\r\nexport const AlertProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n  const setAlert = (status, msg, type, time) => {\r\n    const theType = status === 'on' ? type : state.alertType\r\n    const theMsg = status === 'on' ? msg : state.alertMsg\r\n    \r\n    dispatch({\r\n      type: 'set-alert',\r\n      payload: {\r\n        status,\r\n        msg: theMsg,\r\n        type: theType,\r\n        time\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alertStatus: state.alertStatus,\r\n        alertMsg: state.alertMsg,\r\n        alertType: state.alertType,\r\n        setAlert,\r\n      }}\r\n    >\r\n      { children }\r\n    </AlertContext.Provider>\r\n  );\r\n};","import React, { useContext } from 'react'\r\nimport './logo.scss';\r\n\r\nimport { AlertContext } from '../../../context/alert/AlertState';\r\n\r\nconst Logo = () => {\r\n  const { setAlert } = useContext(AlertContext)\r\n\r\n  const alert = () => {\r\n    setAlert('on', 'you successfully clicked on logo', 'success', 3000)\r\n  }\r\n  \r\n  return (\r\n    <div className='logo' onClick={alert}>\r\n      <div className='col col-1'>\r\n        <div className='row row-1'></div>\r\n        <div className='row row-2'></div>\r\n        <div className='row row-3'></div>\r\n      </div>\r\n      <div className='col col-2'>\r\n        <div className='row row-1'></div>\r\n        <div className='row row-2'></div>\r\n        <div className='row row-3'></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport './themebutton.scss';\r\n\r\nconst ThemeButton = () => {\r\n  return (\r\n    <div>\r\n      from theme changer\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ThemeButton\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'set-modal':\r\n      return {\r\n        ...state,\r\n        modalStatus: action.payload.status,\r\n        modalType: action.payload.type\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { createContext, useReducer } from 'react';\r\nimport ModalReducer from './ModalReducer';\r\n\r\nconst initialState = {\r\n  modalStatus: 'first-off',\r\n  modalType: 'none',\r\n};\r\n\r\nexport const ModalContext = createContext(initialState);\r\n\r\nexport const ModalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(ModalReducer, initialState);\r\n\r\n  const setModal = (status, type) => {\r\n    if(status === 'off') {\r\n      dispatch({\r\n        type: 'set-modal',\r\n        payload: {\r\n          status,\r\n          type: state.modalType\r\n        }\r\n      })\r\n    } else if(status === 'on') {\r\n      dispatch({\r\n        type: 'set-modal',\r\n        payload: {\r\n          status,\r\n          type\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        modalStatus: state.modalStatus,\r\n        modalType: state.modalType,\r\n        setModal,\r\n      }}\r\n    >\r\n      { children }\r\n    </ModalContext.Provider>\r\n  );\r\n};","import React, { useContext } from 'react'\r\n\r\nimport Logo from './../utils/logo/Logo';\r\nimport ThemeButton from '../utils/themebutton/ThemeButton';\r\nimport { ModalContext } from '../../context/modal/ModalState';\r\n\r\nimport './style/navbar.scss';\r\n\r\nconst Navbar = () => {\r\n  const { setModal } = useContext(ModalContext)\r\n  \r\n  const onInsert = () => {\r\n    setModal('on', 'quick-insert')\r\n  }\r\n  \r\n  return (\r\n    <div className='navbar'>\r\n      <div className='navbar-left'>\r\n        <div>\r\n          right\r\n        </div>\r\n        <div>\r\n          search\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Logo />\r\n      </div>\r\n      <div className='navbar-right'>\r\n        <ThemeButton />\r\n        <button className='insert-button' onClick={onInsert}>\r\n          insert\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst QuickInsert = () => {\r\n  return (\r\n    <div>\r\n      from quick insert\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default QuickInsert\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { ModalContext } from '../../context/modal/ModalState';\r\n\r\nimport QuickInsert from './types/QuickInsert';\r\n\r\nimport './style/modal.scss';\r\n\r\nconst Modal = () => {\r\n  const { modalStatus, modalType, setModal } = useContext(ModalContext)\r\n  \r\n  const [modalClass, setModalClass] = useState('off')\r\n  \r\n  useEffect(() => {\r\n    if(modalStatus === 'off') {\r\n      setModalClass('go')\r\n\r\n      setTimeout(() => {\r\n        setModalClass('off')\r\n      }, 480);\r\n    } else if(modalStatus === 'on') {\r\n      setModalClass('come')\r\n\r\n      setTimeout(() => {\r\n        setModalClass('on')\r\n      }, 480);\r\n    } else if(modalStatus === 'first-off') {\r\n      setModalClass('off')\r\n    }\r\n  }, [modalStatus])\r\n\r\n  const onClick = e => {\r\n    if(e.target.classList.contains('modal-container')) {\r\n      closeModal()\r\n    }\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal('off')\r\n  }\r\n  \r\n  return (\r\n    <div className={`modal-container ${modalClass}`} onClick={onClick}>\r\n      <div className='modal-body'>\r\n        <div className='close-modal-btn' onClick={closeModal}></div>\r\n        moda content\r\n        { modalType === 'quick-insert' && <QuickInsert /> }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { AlertContext } from '../../context/alert/AlertState';\r\n\r\nimport './style/alert.scss';\r\n\r\nconst Alert = () => {\r\n  const { alertStatus, alertMsg, alertType, setAlert} = useContext(AlertContext)\r\n\r\n  const [alertClass, setAlertClass] = useState('off')\r\n  \r\n  useEffect(() => {\r\n    if(alertStatus === 'off') {\r\n      setAlertClass('go')\r\n\r\n      setTimeout(() => {\r\n        setAlertClass('off')\r\n      }, 380);\r\n    } else if(alertStatus === 'on') {\r\n      setAlertClass('come')\r\n\r\n      setTimeout(() => {\r\n        setAlertClass('on')\r\n      }, 380);\r\n    } else if(alertStatus === 'first-off') {\r\n      setAlertClass('off')\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [alertStatus])\r\n\r\n  const onClick = () => {\r\n    setAlert('off')\r\n  }\r\n  \r\n  return (\r\n    <div className={`alert ${alertClass} alert-${alertType}`} onClick={onClick}>\r\n      { alertMsg }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Tag = ({tag}) => {\r\n  const [theTag, setTheTag] = useState({})\r\n  \r\n  useEffect(() => {\r\n    try {\r\n      axios.get(`/tags/${tag.id}`)\r\n        .then(res => setTheTag(res.data))\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n  \r\n  const getTagColor = () => {\r\n    return theTag.color\r\n  }\r\n\r\n  const background = {\r\n    background: getTagColor()\r\n  }\r\n  \r\n  return (\r\n    <Link to={`${process.env.PUBLIC_URL}/tag/${tag.id}`} className='tag' style={background}>\r\n      #{tag.name}\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default Tag\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport Tag from './Tag';\r\n\r\nimport './style/note.scss';\r\n\r\nconst Note = ({ note }) => {\r\n  const { tags } = note\r\n  \r\n  const [primaryTag, setPrimaryTag] = useState({})\r\n  \r\n  useEffect(() => {\r\n    try {\r\n      axios.get(`/tags/${tags.first.id}`)\r\n        .then(res => setPrimaryTag(res.data))\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n  \r\n  const borderColor = {\r\n    borderColor: primaryTag.color\r\n  }\r\n  \r\n  return (\r\n    <div className='note' style={borderColor}>\r\n      { note.text }\r\n      <div className='note-footer'>\r\n        <Tag tag={tags.first} />\r\n        {\r\n          tags.other.map(tag => (\r\n            <Tag key={tag.id} tag={tag} />\r\n          ))\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport Note from './Note';\r\n\r\nimport './style/notes.scss';\r\n\r\nconst Notes = ({ notes }) => {\r\n  return (\r\n    <div className='notes-container'>\r\n      {\r\n        notes.map(note => (\r\n          <Note key={note.id} note={note} />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notes\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport Notes from '../../notes/Notes';\r\n\r\nconst Home = () => {\r\n  const [notes, setNotes] = useState([])\r\n\r\n  useEffect(() => {\r\n    try {\r\n      axios.get('/notes')\r\n        .then(res => setNotes(res.data))\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n  \r\n  return (\r\n    <div>\r\n      <br/>\r\n      <Notes notes={notes} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\nimport Notes from '../../notes/Notes';\r\n\r\nimport './tagpage.scss';\r\n\r\nconst TagPage = ({ match }) => {\r\n  const { id } = match.params\r\n\r\n  const [tag, setTag] = useState({})\r\n  const [notes, setNotes] = useState([])\r\n  \r\n  useEffect(() => {\r\n    axios.get(`/tags/${id}`)\r\n      .then(res => setTag(res.data))\r\n\r\n    axios.get(`/notes/tag/${id}`)\r\n      .then(res => setNotes(res.data))\r\n    // eslint-disable-next-line\r\n  }, [])\r\n  \r\n  const tagColor = {\r\n    color: tag.color\r\n  }\r\n  \r\n  return (\r\n    <div className='tag-page'>\r\n      <Link to={`${process.env.PUBLIC_URL}/`}>\r\n        go home\r\n      </Link>\r\n    \r\n      <h1 style={tagColor} className='tag-name'>\r\n        #{ tag.name }\r\n      </h1>\r\n\r\n      {\r\n        notes.length > 0 &&\r\n          <Notes notes={notes} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TagPage\r\n","import React from 'react'\r\n\r\nconst Tags = () => {\r\n  return (\r\n    <div>\r\n      from Tags page\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tags\r\n","import React from 'react'\r\n\r\nconst Note = ({ match }) => {\r\n  return (\r\n    <div>\r\n      from note page\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\n\r\nconst Statics = () => {\r\n  return (\r\n    <div>\r\n      from stats\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Statics\r\n","import React from 'react'\r\n\r\nconst Rules = () => {\r\n  return (\r\n    <div>\r\n      from rules\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rules\r\n","import React from 'react'\r\n\r\nconst CurrentTasks = () => {\r\n  return (\r\n    <div>\r\n      from current tasks\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CurrentTasks\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Modal from './components/modal/Modal';\nimport Alert from './components/layout/Alert';\n// pages\nimport Home from './components/pages/home/Home';\nimport TagPage from './components/pages/tag/TagPage';\nimport Tags from './components/pages/tags/Tags';\nimport NotePage from './components/pages/note/NotePage';\nimport Statistics from './components/pages/statistics/Statistics';\nimport Rules from './components/pages/rules/Rules';\nimport CurrentTasks from './components/pages/currenttasks/CurrentTasks';\n\nconst App = () => {\n  const publicUrl = process.env.PUBLIC_URL\n  \n  console.log('how to relate tags to each other???')\n  console.log('tag with no notes page')\n  \n  return (\n    <Router>\n      <>\n        <Modal />\n        <Alert />\n        <Navbar />\n        <div className='container'>\n          <Switch>\n            <Route exact path={`${publicUrl}/`} component={Home} />\n            <Route exact path={`${publicUrl}/hashnote`} component={Home} />\n            <Route exact path={`${publicUrl}/tag/:id`} component={TagPage} />\n            <Route exact path={`${publicUrl}/tags`} component={Tags} />\n            <Route exact path={`${publicUrl}/note/:id`} component={NotePage} />\n            <Route exact path={`${publicUrl}/statics`} component={Statistics} />\n            <Route exact path={`${publicUrl}/rules`} component={Rules} />\n            <Route exact path={`${publicUrl}/current-tasks`} component={CurrentTasks} />\n          </Switch>\n        </div>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'test':\r\n      return {\r\n        ...state,\r\n        test: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\nconst initialState = {\r\n  test: 'test text',\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  const testFunc = () => {\r\n    dispatch({\r\n      type: 'test',\r\n      payload: 'test-text-2'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        test: state.test,\r\n        testFunc,\r\n      }}\r\n    >\r\n      { children }\r\n    </GlobalContext.Provider>\r\n  );\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { GlobalProvider } from './context/GlobalState';\nimport { AlertProvider } from './context/alert/AlertState'; \nimport { ModalProvider } from './context/modal/ModalState';\nimport * as serviceWorker from './serviceWorker';\n\nconst StateContainer = () => {\n  return (\n    <GlobalProvider>\n      <ModalProvider>\n        <AlertProvider>\n          <App />\n        </AlertProvider>\n      </ModalProvider>\n    </GlobalProvider>\n  )\n}\n\nReactDOM.render(<StateContainer />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}